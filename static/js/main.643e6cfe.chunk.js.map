{"version":3,"sources":["components/FeedbackOptions/feadbackOptionsItem.js","components/FeedbackOptions/feedbackOptions.js","components/Statistics/statistics.js","components/Section/section.js","components/Notification/notification.js","App.js","index.js","components/FeedbackOptions/feedback.module.css","components/Section/section.module.css"],"names":["FeadbackOptionsItem","onLeaveFeedback","option","className","css","item","button","type","onClick","FeedbackOptions","options","list","map","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","section","Notification","message","App","state","onButtonClick","value","setState","prevState","countTotalFeedback","Math","round","this","stateArr","Object","keys","totalFeedback","console","log","positiveFeedbackPercentage","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6SAGMA,EAAsB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,OAC9C,OACE,oBAAIC,UAAWC,IAAIC,KAAnB,SACE,wBACEF,UAAWC,IAAIE,OACfC,KAAK,SACLC,QAAS,kBAAMP,EAAgBC,IAHjC,SAKGA,OCPHO,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAAST,EAAsB,EAAtBA,gBAClC,OACE,oBAAIE,UAAWC,IAAIO,KAAnB,SACGD,EAAQE,KAAI,SAAAV,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,EACRD,gBAAiBA,GAFZC,SCPTW,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,kDACA,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,e,gBCRFC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASlB,UAAWC,IAAIkB,QAAxB,UACE,qBAAInB,UAAWC,IAAIgB,MAAnB,cAA4BA,KAC3BC,MCLDE,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCIPC,E,4MACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAQE,EAAUF,GAAS,O,EAG5DG,mBAAqB,WACnB,OAAO,EAAKL,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,qEAE3D,WACE,OAAOgB,KAAKC,MACS,IAAlBC,KAAKR,MAAMZ,MACToB,KAAKR,MAAMZ,KAAOoB,KAAKR,MAAMX,QAAUmB,KAAKR,MAAMV,Q,oBAIzD,WACE,MAA+BkB,KAAKR,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBmB,EAAWC,OAAOC,KAAKH,KAAKR,OAC5BY,EAAgBJ,KAAKH,qBAC3BQ,QAAQC,IAAIF,GACZ,IAAMG,EAA6BP,KAAKQ,kCAExC,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,CAASiB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASyB,EACTlC,gBAAiBiC,KAAKP,kBAG1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACIkB,EAGA,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,mBAAoBuB,IAPtB,cAAC,EAAD,CAAcjB,QAAQ,kC,GAtChBmB,aAsDHlB,ICxDfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,kBCAvFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.643e6cfe.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport css from './feedback.module.css';\n\nconst FeadbackOptionsItem = ({ onLeaveFeedback, option }) => {\n  return (\n    <li className={css.item}>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    </li>\n  );\n};\n\nFeadbackOptionsItem.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  option: PropTypes.string,\n};\nexport { FeadbackOptionsItem };\n","import PropTypes from 'prop-types';\nimport { FeadbackOptionsItem } from './feadbackOptionsItem';\nimport css from './feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={css.list}>\n      {options.map(option => (\n        <FeadbackOptionsItem\n          key={option}\n          option={option}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      ))}\n    </ul>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\nexport { FeedbackOptions };\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>No feedback given</p>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage} %</li>\n      </ul>\n    </div>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\nexport { Statistics };\n","import PropTypes from 'prop-types';\nimport css from './section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h2 className={css.title}> {title}</h2>\n      {children}\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport { Section };\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport { Notification };\n","import './App.css';\nimport { Component } from 'react';\nimport { FeedbackOptions } from './components/FeedbackOptions';\nimport { Statistics } from './components/Statistics';\nimport { Section } from './components/Section';\nimport { Notification } from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onButtonClick = value => {\n    this.setState(prevState => ({ [value]: prevState[value] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage() {\n    return Math.round(\n      (this.state.good * 100) /\n        (this.state.good + this.state.neutral + this.state.bad),\n    );\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const stateArr = Object.keys(this.state);\n    const totalFeedback = this.countTotalFeedback();\n    console.log(totalFeedback);\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={stateArr}\n            onLeaveFeedback={this.onButtonClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {!totalFeedback ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"feedback_list__1UmDa\",\"item\":\"feedback_item__3aIPJ\",\"button\":\"feedback_button__RmTCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__2uFQK\",\"title\":\"section_title__25GWB\"};"],"sourceRoot":""}